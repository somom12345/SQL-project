create table layoff_1 
like layoff;


select * from layoff_1;

insert into layoff_1
select * from layoff;

select * from layoff_1;

create table layoff_2 like layoff_1;

select * from layoff_2;

alter table layoff_2
add column row_num int;

insert into layoff_2 
select *,
row_number() over(partition by company, location, industry, total_laid_off, percentage_laid_off, date, 
stage, country, funds_raised_millions) from layoff_1;

select * from layoff_2 where row_num>2;

delete from layoff_2 where row_num>1;


select distinct company,trim(company) from layoff_2
order by 1;

update  layoff_2
set company =trim(company);


update layoff_2
set industry = 'Crypto'
where industry like 'Crypto%';

update layoff_2
set country = trim(trailing '.' from country)
where country like 'United States%';

select distinct country from layoff_2
order by country;

select * from layoff_2
where industry is null or industry ='';

update layoff_2 
set industry = null
where industry ='';

select t1.industry,t2.industry from layoff_2 as t1
join layoff_2 as t2
on t1.company=t2.company
where t1.industry is NULL
and t2.industry is not null;

update layoff_2 as t1
join layoff_2 as t2
on t1.company=t2.company
set t1.industry=t2.industry
where t1.industry is NULL
and t2.industry is not null;


select * from layoff_2
where total_laid_off is null
and percentage_laid_off is null;

delete from layoff_2
where total_laid_off is null
and percentage_laid_off is null;


select * from layoff_2;

select date,str_to_date(date,'%m/%d/%Y')
from layoff_2;

update layoff_2
set date =str_to_date(date,'%m/%d/%Y');

alter table layoff_2
modify column date date;

alter table layoff_2
drop column row_num;


select * from layoff_2;


select substring(date,1,7)as month_laid,sum(total_laid_off)as sum_laid,sum(sum(total_laid_off)) over(order by substring(date,1,7)) as rolling_total
from layoff_2
where substring(date,1,7) is not null
group by month_laid;


select company,year(date)as laid_year,sum(total_laid_off) as total_laid,dense_rank()over(partition by year(date) order by sum(total_laid_off)desc)as ranking
from layoff_2
where total_laid_off is not null
and year(date) is not null
group by company ,year(date)
order by laid_year,ranking asc;


with company_year as
(
	select company,year(date) as laid_year,sum(total_laid_off) as total_laid 
    from layoff_2
    where year(date) is not null 
    and total_laid_off is not null
    group by company,year(date)
)
,company_year_rank as
(
	select * ,dense_rank()over(partition by laid_year order by total_laid desc) as ranking
    from company_year
    where laid_year is not null
)
select * from company_year_rank
where ranking <=5;
